Domain GereciamentoCapacidade {
}

BoundedContext SGP implements GereciamentoCapacidade {
	Aggregate Time {
		Entity Time {
			aggregateRoot

			-TimeId id
			String nome

			-ProfissionalId gerente

			Repository TimeRepository {
				@Time obterTime(@TimeId id);
			}
		}
		
		ValueObject TimeId {
			int id
		}		
	}

	Aggregate Profissional {
		Entity Profissional {
			aggregateRoot

			-ProfissionalId id
			String nome
			boolean gerenteCapacidade

			-PerfilId perfil			
			-List<CompetenciaId> competencias
			-List<ConhecimentoId> conhecimentos
			
			Repository ProfissionalRepository {
				obterProfissional(@ProfissionalId id);
			}
		}

		ValueObject ProfissionalId {
			int id
		}
	}

	Aggregate Demanda {
		Entity Demanda {
			aggregateRoot

			-DemandaId id
			Date inicio
			Date fim
			-PerfilId perfil
			-List<CompetenciaId> competencias
			-List<ConhecimentoId> conhecimentos
			-TimeId time			
			
			Repository DemandaRepository {
				@Demanda obterDemanda(@DemandaId id);
				void salvarDemanda(@Demanda demanda);
			}
		}

		ValueObject DemandaId {
			int id
		}

		Service DemandaService {
			void demandarProfissional(@ProfissionalId demandador, @Demanda demanda);
		}
	}
	
	Aggregate Perfil {
		Entity Perfil {
			aggregateRoot

			-PerfilId id
			String nome
		}

		ValueObject PerfilId {
			int id
		}
	}	
	
	Aggregate Competencia {
		Entity Competencia {
			aggregateRoot

			-CompetenciaId id
			String nome
		}

		ValueObject CompetenciaId {
			int id
		}
	}		
	
	Aggregate Conhecimento {
		Entity Conhecimento {
			aggregateRoot

			-ConhecimentoId id
			String nome
		}

		ValueObject ConhecimentoId {
			int id
		}
	}

	Aggregate Alocacao {
		Entity Alocacao {
			aggregateRoot

			-AlocacaoId id
			Date inicio
			Date fim

			-DemandaId demanda
			-ProfissionalId profissional			
			
			Repository AlocacaoRepository {
				List<@Alocacao> obterAlocacoes(@ProfissionalId profissional);
			}
		}
		
		ValueObject AlocacaoId {
			int id
		}

		Service AlocacaoServico {
			void atenderDemanda(@ProfissionalId gerenteCapacidade, @DemandaId demanda, @ProfissionalId profissional, Date inicio, Date fim);
		}
	}
}